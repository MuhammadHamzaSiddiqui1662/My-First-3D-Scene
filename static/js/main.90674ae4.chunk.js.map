{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","className","camera","fov","near","far","position","OrbitControls","Plane","rotation","Math","PI","args","color","side","THREE","House","Tree","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAiBeA,MAZf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,CAAQC,OAAQ,CAAEC,IAAK,GAAIC,KAAM,GAAKC,IAAK,IAAMC,SAAU,CAAC,EAAG,GAAI,KAAnE,UACE,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UAOFC,EAAQ,WACZ,OACE,uBAAMC,SAAU,EAAEC,KAAKC,GAAG,EAAE,EAAE,GAA9B,UACE,+BAAeC,KAAM,CAAC,GAAI,MAC1B,mCAAmBC,MAAO,QAASC,KAAMC,mBAKzCC,EAAQ,WAEZ,OACE,wBAAOV,SAFM,CAAC,GAAI,KAAM,IAExB,UAEE,uBAAM,aAAY,IAAlB,UACE,6BAAaM,KAAM,CAAC,GAAI,GAAI,MAC5B,mCAAmBC,MAAO,cAG5B,uBAAMP,SAAU,CAAC,IAAK,IAAK,KAA3B,UACE,6BAAaM,KAAM,CAAC,GAAI,GAAI,MAC5B,mCAAmBC,MAAO,cAG5B,uBAAMP,SAAU,CAAC,GAAI,IAAK,KAA1B,UACE,+BAAeM,KAAM,CAAC,EAAG,KACzB,mCAAmBC,MAAO,WAG5B,uBAAMP,SAAU,CAAC,EAAG,GAAI,KAAxB,UACE,+BAAeM,KAAM,CAAC,EAAG,KACzB,mCAAmBC,MAAO,WAE5B,uBAAMP,SAAU,CAAC,EAAG,GAAI,KAAxB,UACE,+BAAeM,KAAM,CAAC,EAAG,KACzB,mCAAmBC,MAAO,WAG5B,uBAAMP,SAAU,CAAC,GAAI,EAAG,KAAxB,UACE,gCAAgBM,KAAM,CAAC,GAAK,MAC5B,mCAAmBC,MAAO,kBAM5BI,EAAO,WACX,OACE,wBAAOX,SAAU,EAAE,GAAI,IAAM,IAA7B,UACE,uBAAM,aAAY,EAAlB,UACE,kCAAkBM,KAAM,CAAC,EAAG,EAAG,GAAI,MACnC,mCAAmBC,MAAO,aAE5B,8BC5DSK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.90674ae4.chunk.js","sourcesContent":["import './App.css';\nimport * as THREE from 'three';\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { OrbitControls } from '@react-three/drei';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Canvas camera={{ fov: 75, near: 0.1, far: 1000, position: [0, 20, 20] }} >\n        <OrbitControls />\n        <Plane />\n        <House />\n        <Tree />\n      </Canvas>\n    </div>\n  );\n}\nexport default App;\n\nconst Plane = () => {\n  return(\n    <mesh rotation={[-Math.PI/2,0,0]}>\n      <planeGeometry args={[50, 50]} />\n      <meshBasicMaterial color={'green'} side={THREE.DoubleSide} />\n    </mesh>\n  );\n}\n\nconst House = () => {\n  let position = [15, 5.1, -15];\n  return(\n    <group position={position}>\n      {/* Ground Floor */}\n      <mesh position-y={1.5}>\n        <boxGeometry args={[15, 13, 15]} />\n        <meshBasicMaterial color={'yellow'} />\n      </mesh>\n      {/* First Floor */}\n      <mesh position={[2.5, 10, -2.5]} >\n        <boxGeometry args={[10, 10, 10]} />\n        <meshBasicMaterial color={'yellow'} />\n      </mesh>\n      {/* Door */}\n      <mesh position={[0, -1.5, 7.6]}>\n        <planeGeometry args={[4, 7]} />\n        <meshBasicMaterial color={'red'}/>\n      </mesh>\n      {/* Windows */}\n      <mesh position={[5, 10, 2.6]}>\n        <planeGeometry args={[2, 2]} />\n        <meshBasicMaterial color={'red'}/>\n      </mesh>\n      <mesh position={[0, 10, 2.6]}>\n        <planeGeometry args={[2, 2]} />\n        <meshBasicMaterial color={'red'}/>\n      </mesh>\n      {/* Door Nob */}\n      <mesh position={[1, -2, 7.7]}>\n        <circleGeometry args={[0.5, 10]} />\n        <meshBasicMaterial color={'yellow'} />\n      </mesh>\n    </group>\n  )\n}\n\nconst Tree = () => {\n  return(\n    <group position={[-13, 0.1, -10]}>\n      <mesh position-y={5}>\n        <cylinderGeometry args={[1, 3, 10, 20]} />\n        <meshBasicMaterial color={'brown'} />\n      </mesh>\n      <group></group>\n    </group>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}